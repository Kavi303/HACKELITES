import win32com.client as win32SIGNED = 0UNSIGNED = 1HEX = 2BINARY = 3FLOAT_LE_BS = 4FLOAT_BE = 5DOUBLE_LE_BS = 6DOUBLE_BE = 7S32_LE_BS = 8S32_BE = 9FLOAT_LE = 10FLOAT_BE_BS = 11DOUBLE_LE = 12DOUBLE_BE_BS = 13S32_LE = 14S32_BE_BS = 15U32_BE = 17U32_LE_BS = 18U32_BE_BS = 19U32_LE = 20S64_BE = 21S64_LE_BS = 22S64_BE_BS = 23S64_LE = 24U64_BE = 25U64_LE_BS = 26U64_BE_BS = 27U64_LE = 28#EndiannessBE = 0LE = 3BE_BS = 2LE_BS = 1App = win32.Dispatch('Mbslave.Application')App.Connection = 1App.IPAddress = "127.0.0.1"App.ServerPort = 502App.OpenConnection#Create a Modbus display window called Win1Win1 = win32.Dispatch("Mbslave.Document")# Setup 100 holding registers with slave ID 1, address 0 (40001)Win1.SetupHoldingRegisters(1, 0, 100)# Show the Modbus windowWin1.ShowWindow()# Show 20 rowsWin1.Rows(1)# Disable refresh for speedWin1.EnableRefresh = False# Set all different formats# This sets how the value is displayed# Use ByteOrder to set the actual endiannessWin1.SetFormat(0, SIGNED)Win1.SetFormat(1, UNSIGNED)Win1.SetFormat(2, HEX)Win1.SetFormat(3, BINARY)Win1.SetFormat(4, S32_BE)Win1.SetFormat(6, S32_LE)Win1.SetFormat(8, S32_BE_BS)Win1.SetFormat(10, S32_LE_BS)Win1.SetFormat(12, U32_BE)Win1.SetFormat(14, U32_LE)Win1.SetFormat(16, U32_BE_BS)Win1.SetFormat(18, U32_LE_BS)Win1.SetFormat(20, S64_BE)Win1.SetFormat(24, S64_LE)Win1.SetFormat(28, S64_BE_BS)Win1.SetFormat(32, S64_LE_BS)Win1.SetFormat(40, U64_BE)Win1.SetFormat(44, U64_LE)Win1.SetFormat(48, U64_BE_BS)Win1.SetFormat(52, U64_LE_BS)Win1.SetFormat(60, FLOAT_BE)Win1.SetFormat(62, FLOAT_LE)Win1.SetFormat(64, FLOAT_BE_BS)Win1.SetFormat(66, FLOAT_LE_BS)Win1.SetFormat(80, DOUBLE_BE)Win1.SetFormat(84, DOUBLE_LE)Win1.SetFormat(88, DOUBLE_BE_BS)Win1.SetFormat(92, DOUBLE_LE_BS)# Set all Names to used formatWin1.SetName(0, "SIGNED")Win1.SetName(1, "UNSIGNED")Win1.SetName(2, "HEX")Win1.SetName(3, "BINARY")Win1.SetName(4, "S32_BE")Win1.SetName(6, "S32_LE")Win1.SetName(8, "S32_BE_BS")Win1.SetName(10, "S32_LE_BS")Win1.SetName(12, "U32_BE")Win1.SetName(14, "U32_LE")Win1.SetName(16, "U32_BE_BS")Win1.SetName(18, "U32_LE_BS")Win1.SetName(20, "S64_BE")Win1.SetName(24, "S64_LE")Win1.SetName(28, "S64_BE_BS")Win1.SetName(32, "S64_LE_BS")Win1.SetName(40, "U64_BE")Win1.SetName(44, "U64_LE")Win1.SetName(48, "U64_BE_BS")Win1.SetName(52, "U64_LE_BS")Win1.SetName(60, "FLOAT_BE")Win1.SetName(62, "FLOAT_LE")Win1.SetName(64, "FLOAT_BE_BS")Win1.SetName(66, "FLOAT_LE_BS")Win1.SetName(80, "DOUBLE_BE")Win1.SetName(84, "DOUBLE_LE")Win1.SetName(88, "DOUBLE_BE_BS")Win1.SetName(92, "DOUBLE_LE_BS")# Set different valuesWin1.SRegisters(0, -100)Win1.SRegisters(1, 100)Win1.URegisters(2, 43690)Win1.URegisters(3, 65535)Win1.ByteOrder = BEWin1.Ints_32(4, -123456)Win1.ByteOrder = LEWin1.Ints_32(6, -123456)Win1.ByteOrder = BE_BSWin1.Ints_32(8, -123456)Win1.ByteOrder = LE_BSWin1.Ints_32(10, -123456)Win1.ByteOrder = BEWin1.UInts_32(12, 123456)Win1.ByteOrder = LEWin1.UInts_32(14, 123456)Win1.ByteOrder = BE_BSWin1.UInts_32(16, 123456)Win1.ByteOrder = LE_BSWin1.UInts_32(18, 123456)Win1.ByteOrder = BEWin1.Ints_64(20, -123456)Win1.ByteOrder = LEWin1.Ints_64(24, -123456)Win1.ByteOrder = BE_BSWin1.Ints_64(28, -123456)Win1.ByteOrder = LE_BSWin1.Ints_64(32, -123456)Win1.ByteOrder = BEWin1.UInts_64(40, 123456)Win1.ByteOrder = LEWin1.UInts_64(44, 123456)Win1.ByteOrder = BE_BSWin1.UInts_64(48, 123456)Win1.ByteOrder = LE_BSWin1.UInts_64(52, 123456)Win1.ByteOrder = BEWin1.Floats (60, 123.456)Win1.ByteOrder = LEWin1.Floats (62, 123.456)Win1.ByteOrder = BE_BSWin1.Floats(64, 123.456)Win1.ByteOrder = LE_BSWin1.Floats(66, 123.456)Win1.ByteOrder = BEWin1.Doubles(80, 123.456)Win1.ByteOrder = LEWin1.Doubles(84, 123.456)Win1.ByteOrder = BE_BSWin1.Doubles(88, 123.456)Win1.ByteOrder = LE_BSWin1.Doubles(92, 123.456)# RefreshWin1.EnableRefresh = TrueWin1.ResizeAllColumns ()Win1.ResizeWindow()print (Win1.GetName(1))_ = input("Press ENTER to quit:")